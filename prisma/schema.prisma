// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  image     String?
  email     String    @unique
  password  String
  role      String      @default("USER")
  name      String
  address   String
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("users")
}

model Service {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String    @unique
  image       String
  description String
  price       String
  status      Boolean   @default(true)
  length      String
  booking     Booking[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("services")
}

model Booking {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  serviceId String   @db.ObjectId
  service   Service  @relation(fields: [serviceId], references: [id])
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  status    Status   @default(PENDING)
  date      String

  time      String
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}

model Review {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  bookingId String  @db.ObjectId @unique
  booking   Booking @relation(fields: [bookingId], references: [id])

  
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews")
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum Status {
  PENDING
  CONFIRMED
  CANCELED
  COMPLETED
}
